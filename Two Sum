Brute Force Approach
 // public int[] twoSum(int[] nums, int target) {
    //     int a[] = new int[2];

    //     for(int i=0; i<nums.length; i++){
    //         for(int j=i+1; j<nums.length; j++){
    //             if(nums[i] + nums[j] == target){
    //                 a[0] = i;
    //                 a[1] = j;
    //             }
    //         }
    //     }
    //     return a;
    // }
    
    // Using HashMap
    
    class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];
            if (map.containsKey(complement)) {
                return new int[] { map.get(complement), i };
            }
            map.put(nums[i], i);
        }
        // In case there is no solution, we'll just return null
        return null;
    }
}
